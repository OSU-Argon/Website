//@ts-nocheck
  // DO NOT MODIFY THIS FILE. This file is automatically generated by Tina
  export function gql(strings: TemplateStringsArray, ...args: string[]): string {
    let str = ''
    strings.forEach((string, i) => {
      str += string + (args[i] || '')
    })
    return str
  }
  export type Maybe<T> = T | null;
export type InputMaybe<T> = Maybe<T>;
export type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };
export type MakeOptional<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]?: Maybe<T[SubKey]> };
export type MakeMaybe<T, K extends keyof T> = Omit<T, K> & { [SubKey in K]: Maybe<T[SubKey]> };
export type MakeEmpty<T extends { [key: string]: unknown }, K extends keyof T> = { [_ in K]?: never };
export type Incremental<T> = T | { [P in keyof T]?: P extends ' $fragmentName' | '__typename' ? T[P] : never };
/** All built-in and custom scalars, mapped to their actual values */
export type Scalars = {
  ID: { input: string; output: string; }
  String: { input: string; output: string; }
  Boolean: { input: boolean; output: boolean; }
  Int: { input: number; output: number; }
  Float: { input: number; output: number; }
  /** References another document, used as a foreign key */
  Reference: { input: any; output: any; }
  JSON: { input: any; output: any; }
};

export type SystemInfo = {
  __typename?: 'SystemInfo';
  filename: Scalars['String']['output'];
  title?: Maybe<Scalars['String']['output']>;
  basename: Scalars['String']['output'];
  breadcrumbs: Array<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  relativePath: Scalars['String']['output'];
  extension: Scalars['String']['output'];
  template: Scalars['String']['output'];
  collection: Collection;
};


export type SystemInfoBreadcrumbsArgs = {
  excludeExtension?: InputMaybe<Scalars['Boolean']['input']>;
};

export type Folder = {
  __typename?: 'Folder';
  name: Scalars['String']['output'];
  path: Scalars['String']['output'];
};

export type PageInfo = {
  __typename?: 'PageInfo';
  hasPreviousPage: Scalars['Boolean']['output'];
  hasNextPage: Scalars['Boolean']['output'];
  startCursor: Scalars['String']['output'];
  endCursor: Scalars['String']['output'];
};

export type Node = {
  id: Scalars['ID']['output'];
};

export type Document = {
  id: Scalars['ID']['output'];
  _sys?: Maybe<SystemInfo>;
  _values: Scalars['JSON']['output'];
};

/** A relay-compliant pagination connection */
export type Connection = {
  totalCount: Scalars['Float']['output'];
  pageInfo: PageInfo;
};

export type Query = {
  __typename?: 'Query';
  getOptimizedQuery?: Maybe<Scalars['String']['output']>;
  collection: Collection;
  collections: Array<Collection>;
  node: Node;
  document: DocumentNode;
  global: Global;
  globalConnection: GlobalConnection;
  page: Page;
  pageConnection: PageConnection;
};


export type QueryGetOptimizedQueryArgs = {
  queryString: Scalars['String']['input'];
};


export type QueryCollectionArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
};


export type QueryNodeArgs = {
  id?: InputMaybe<Scalars['String']['input']>;
};


export type QueryDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGlobalArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryGlobalConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<GlobalFilter>;
};


export type QueryPageArgs = {
  relativePath?: InputMaybe<Scalars['String']['input']>;
};


export type QueryPageConnectionArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PageFilter>;
};

export type DocumentFilter = {
  global?: InputMaybe<GlobalFilter>;
  page?: InputMaybe<PageFilter>;
};

export type DocumentConnectionEdges = {
  __typename?: 'DocumentConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<DocumentNode>;
};

export type DocumentConnection = Connection & {
  __typename?: 'DocumentConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<DocumentConnectionEdges>>>;
};

export type Collection = {
  __typename?: 'Collection';
  name: Scalars['String']['output'];
  slug: Scalars['String']['output'];
  label?: Maybe<Scalars['String']['output']>;
  path: Scalars['String']['output'];
  format?: Maybe<Scalars['String']['output']>;
  matches?: Maybe<Scalars['String']['output']>;
  templates?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  fields?: Maybe<Array<Maybe<Scalars['JSON']['output']>>>;
  documents: DocumentConnection;
};


export type CollectionDocumentsArgs = {
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<DocumentFilter>;
  folder?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentNode = Global | Page | Folder;

export type GlobalHeaderNav = {
  __typename?: 'GlobalHeaderNav';
  href?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
};

export type GlobalHeader = {
  __typename?: 'GlobalHeader';
  name?: Maybe<Scalars['String']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  nav?: Maybe<Array<Maybe<GlobalHeaderNav>>>;
};

export type GlobalFooterSections = {
  __typename?: 'GlobalFooterSections';
  title?: Maybe<Scalars['String']['output']>;
  content?: Maybe<Scalars['JSON']['output']>;
};

export type GlobalFooter = {
  __typename?: 'GlobalFooter';
  sections?: Maybe<Array<Maybe<GlobalFooterSections>>>;
};

export type GlobalTheme = {
  __typename?: 'GlobalTheme';
  color?: Maybe<Scalars['String']['output']>;
};

export type Global = Node & Document & {
  __typename?: 'Global';
  header?: Maybe<GlobalHeader>;
  footer?: Maybe<GlobalFooter>;
  theme?: Maybe<GlobalTheme>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type StringFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type GlobalHeaderNavFilter = {
  href?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
};

export type GlobalHeaderFilter = {
  name?: InputMaybe<StringFilter>;
  color?: InputMaybe<StringFilter>;
  nav?: InputMaybe<GlobalHeaderNavFilter>;
};

export type GlobalFooterSectionsContentSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type GlobalFooterSectionsContentSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type GlobalFooterSectionsContentAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type ImageFilter = {
  startsWith?: InputMaybe<Scalars['String']['input']>;
  eq?: InputMaybe<Scalars['String']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['String']['input']>>>;
};

export type BooleanFilter = {
  eq?: InputMaybe<Scalars['Boolean']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PageBlocksHeroHeadlineImageCaptionSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineImageCaptionSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineImageCaptionAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type GlobalFooterSectionsContentImageCaptionFilter = {
  Subscript?: InputMaybe<PageBlocksHeroHeadlineImageCaptionSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksHeroHeadlineImageCaptionSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksHeroHeadlineImageCaptionAnchorFilter>;
};

export type NumberFilter = {
  lt?: InputMaybe<Scalars['Float']['input']>;
  lte?: InputMaybe<Scalars['Float']['input']>;
  gte?: InputMaybe<Scalars['Float']['input']>;
  gt?: InputMaybe<Scalars['Float']['input']>;
  eq?: InputMaybe<Scalars['Float']['input']>;
  exists?: InputMaybe<Scalars['Boolean']['input']>;
  in?: InputMaybe<Array<InputMaybe<Scalars['Float']['input']>>>;
};

export type GlobalFooterSectionsContentImageFilter = {
  image?: InputMaybe<ImageFilter>;
  showCaption?: InputMaybe<BooleanFilter>;
  caption?: InputMaybe<GlobalFooterSectionsContentImageCaptionFilter>;
  hyperlink?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
  float?: InputMaybe<StringFilter>;
};

export type GlobalFooterSectionsContentFilter = {
  Subscript?: InputMaybe<GlobalFooterSectionsContentSubscriptFilter>;
  Superscript?: InputMaybe<GlobalFooterSectionsContentSuperscriptFilter>;
  Anchor?: InputMaybe<GlobalFooterSectionsContentAnchorFilter>;
  Image?: InputMaybe<GlobalFooterSectionsContentImageFilter>;
};

export type GlobalFooterSectionsFilter = {
  title?: InputMaybe<StringFilter>;
  content?: InputMaybe<GlobalFooterSectionsContentFilter>;
};

export type GlobalFooterFilter = {
  sections?: InputMaybe<GlobalFooterSectionsFilter>;
};

export type GlobalThemeFilter = {
  color?: InputMaybe<StringFilter>;
};

export type GlobalFilter = {
  header?: InputMaybe<GlobalHeaderFilter>;
  footer?: InputMaybe<GlobalFooterFilter>;
  theme?: InputMaybe<GlobalThemeFilter>;
};

export type GlobalConnectionEdges = {
  __typename?: 'GlobalConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Global>;
};

export type GlobalConnection = Connection & {
  __typename?: 'GlobalConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<GlobalConnectionEdges>>>;
};

export type PageBlocksHeroImage = {
  __typename?: 'PageBlocksHeroImage';
  src?: Maybe<Scalars['String']['output']>;
  alt?: Maybe<Scalars['String']['output']>;
};

export type PageBlocksHeroActions = {
  __typename?: 'PageBlocksHeroActions';
  label?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['Boolean']['output']>;
  link?: Maybe<Scalars['String']['output']>;
};

export type PageBlocksHero = {
  __typename?: 'PageBlocksHero';
  image?: Maybe<PageBlocksHeroImage>;
  headline?: Maybe<Scalars['JSON']['output']>;
  actions?: Maybe<Array<Maybe<PageBlocksHeroActions>>>;
};

export type PageBlocksFeaturesItemsIcon = {
  __typename?: 'PageBlocksFeaturesItemsIcon';
  name?: Maybe<Scalars['String']['output']>;
  color?: Maybe<Scalars['String']['output']>;
  style?: Maybe<Scalars['String']['output']>;
};

export type PageBlocksFeaturesItems = {
  __typename?: 'PageBlocksFeaturesItems';
  icon?: Maybe<PageBlocksFeaturesItemsIcon>;
  title?: Maybe<Scalars['String']['output']>;
  text?: Maybe<Scalars['JSON']['output']>;
  read_more_button?: Maybe<Scalars['Boolean']['output']>;
  read_more_link?: Maybe<Scalars['String']['output']>;
  read_more_text?: Maybe<Scalars['String']['output']>;
};

export type PageBlocksFeatures = {
  __typename?: 'PageBlocksFeatures';
  items?: Maybe<Array<Maybe<PageBlocksFeaturesItems>>>;
  color?: Maybe<Scalars['String']['output']>;
};

export type PageBlocksContent = {
  __typename?: 'PageBlocksContent';
  color?: Maybe<Scalars['String']['output']>;
  body?: Maybe<Scalars['JSON']['output']>;
};

export type PageBlocksTableColumn_Headers = {
  __typename?: 'PageBlocksTableColumn_headers';
  body?: Maybe<Scalars['JSON']['output']>;
};

export type PageBlocksTableRowsColumns = {
  __typename?: 'PageBlocksTableRowsColumns';
  body?: Maybe<Scalars['JSON']['output']>;
};

export type PageBlocksTableRows = {
  __typename?: 'PageBlocksTableRows';
  columns?: Maybe<Array<Maybe<PageBlocksTableRowsColumns>>>;
  color?: Maybe<Scalars['String']['output']>;
};

export type PageBlocksTable = {
  __typename?: 'PageBlocksTable';
  color?: Maybe<Scalars['String']['output']>;
  full_width?: Maybe<Scalars['Boolean']['output']>;
  column_headers?: Maybe<Array<Maybe<PageBlocksTableColumn_Headers>>>;
  rows?: Maybe<Array<Maybe<PageBlocksTableRows>>>;
};

export type PageBlocksDownload = {
  __typename?: 'PageBlocksDownload';
  color?: Maybe<Scalars['String']['output']>;
  src?: Maybe<Scalars['String']['output']>;
  label?: Maybe<Scalars['String']['output']>;
  icon?: Maybe<Scalars['Boolean']['output']>;
};

export type PageBlocks = PageBlocksHero | PageBlocksFeatures | PageBlocksContent | PageBlocksTable | PageBlocksDownload;

export type Page = Node & Document & {
  __typename?: 'Page';
  title: Scalars['String']['output'];
  blocks?: Maybe<Array<Maybe<PageBlocks>>>;
  id: Scalars['ID']['output'];
  _sys: SystemInfo;
  _values: Scalars['JSON']['output'];
};

export type PageBlocksHeroImageFilter = {
  src?: InputMaybe<ImageFilter>;
  alt?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextImageCaptionSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextImageCaptionSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextImageCaptionAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineImageCaptionFilter = {
  Subscript?: InputMaybe<PageBlocksFeaturesItemsTextImageCaptionSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksFeaturesItemsTextImageCaptionSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksFeaturesItemsTextImageCaptionAnchorFilter>;
};

export type PageBlocksHeroHeadlineImageFilter = {
  image?: InputMaybe<ImageFilter>;
  showCaption?: InputMaybe<BooleanFilter>;
  caption?: InputMaybe<PageBlocksHeroHeadlineImageCaptionFilter>;
  hyperlink?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
  float?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroHeadlineFilter = {
  Subscript?: InputMaybe<PageBlocksHeroHeadlineSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksHeroHeadlineSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksHeroHeadlineAnchorFilter>;
  Image?: InputMaybe<PageBlocksHeroHeadlineImageFilter>;
};

export type PageBlocksHeroActionsFilter = {
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
  link?: InputMaybe<StringFilter>;
};

export type PageBlocksHeroFilter = {
  image?: InputMaybe<PageBlocksHeroImageFilter>;
  headline?: InputMaybe<PageBlocksHeroHeadlineFilter>;
  actions?: InputMaybe<PageBlocksHeroActionsFilter>;
};

export type PageBlocksFeaturesItemsIconFilter = {
  name?: InputMaybe<StringFilter>;
  color?: InputMaybe<StringFilter>;
  style?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodyImageCaptionSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodyImageCaptionSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodyImageCaptionAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextImageCaptionFilter = {
  Subscript?: InputMaybe<PageBlocksContentBodyImageCaptionSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksContentBodyImageCaptionSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksContentBodyImageCaptionAnchorFilter>;
};

export type PageBlocksFeaturesItemsTextImageFilter = {
  image?: InputMaybe<ImageFilter>;
  showCaption?: InputMaybe<BooleanFilter>;
  caption?: InputMaybe<PageBlocksFeaturesItemsTextImageCaptionFilter>;
  hyperlink?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
  float?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesItemsTextFilter = {
  Subscript?: InputMaybe<PageBlocksFeaturesItemsTextSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksFeaturesItemsTextSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksFeaturesItemsTextAnchorFilter>;
  Image?: InputMaybe<PageBlocksFeaturesItemsTextImageFilter>;
};

export type PageBlocksFeaturesItemsFilter = {
  icon?: InputMaybe<PageBlocksFeaturesItemsIconFilter>;
  title?: InputMaybe<StringFilter>;
  text?: InputMaybe<PageBlocksFeaturesItemsTextFilter>;
  read_more_button?: InputMaybe<BooleanFilter>;
  read_more_link?: InputMaybe<StringFilter>;
  read_more_text?: InputMaybe<StringFilter>;
};

export type PageBlocksFeaturesFilter = {
  items?: InputMaybe<PageBlocksFeaturesItemsFilter>;
  color?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodySubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodySuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodyAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodyImageCaptionSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodyImageCaptionSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodyImageCaptionAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodyImageCaptionFilter = {
  Subscript?: InputMaybe<PageBlocksTableColumn_HeadersBodyImageCaptionSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksTableColumn_HeadersBodyImageCaptionSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksTableColumn_HeadersBodyImageCaptionAnchorFilter>;
};

export type PageBlocksContentBodyImageFilter = {
  image?: InputMaybe<ImageFilter>;
  showCaption?: InputMaybe<BooleanFilter>;
  caption?: InputMaybe<PageBlocksContentBodyImageCaptionFilter>;
  hyperlink?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
  float?: InputMaybe<StringFilter>;
};

export type PageBlocksContentBodyFilter = {
  Subscript?: InputMaybe<PageBlocksContentBodySubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksContentBodySuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksContentBodyAnchorFilter>;
  Image?: InputMaybe<PageBlocksContentBodyImageFilter>;
};

export type PageBlocksContentFilter = {
  color?: InputMaybe<StringFilter>;
  body?: InputMaybe<PageBlocksContentBodyFilter>;
};

export type PageBlocksTableColumn_HeadersBodySubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodySuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodyAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodyImageCaptionSubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodyImageCaptionSuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodyImageCaptionAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodyImageCaptionFilter = {
  Subscript?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionAnchorFilter>;
};

export type PageBlocksTableColumn_HeadersBodyImageFilter = {
  image?: InputMaybe<ImageFilter>;
  showCaption?: InputMaybe<BooleanFilter>;
  caption?: InputMaybe<PageBlocksTableColumn_HeadersBodyImageCaptionFilter>;
  hyperlink?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
  float?: InputMaybe<StringFilter>;
};

export type PageBlocksTableColumn_HeadersBodyFilter = {
  Subscript?: InputMaybe<PageBlocksTableColumn_HeadersBodySubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksTableColumn_HeadersBodySuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksTableColumn_HeadersBodyAnchorFilter>;
  Image?: InputMaybe<PageBlocksTableColumn_HeadersBodyImageFilter>;
};

export type PageBlocksTableColumn_HeadersFilter = {
  body?: InputMaybe<PageBlocksTableColumn_HeadersBodyFilter>;
};

export type PageBlocksTableRowsColumnsBodySubscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodySuperscriptFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodyAnchorFilter = {
  value?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodyImageCaptionFilter = {
  Subscript?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionSubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionSuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionAnchorFilter>;
};

export type PageBlocksTableRowsColumnsBodyImageFilter = {
  image?: InputMaybe<ImageFilter>;
  showCaption?: InputMaybe<BooleanFilter>;
  caption?: InputMaybe<PageBlocksTableRowsColumnsBodyImageCaptionFilter>;
  hyperlink?: InputMaybe<StringFilter>;
  width?: InputMaybe<NumberFilter>;
  height?: InputMaybe<NumberFilter>;
  float?: InputMaybe<StringFilter>;
};

export type PageBlocksTableRowsColumnsBodyFilter = {
  Subscript?: InputMaybe<PageBlocksTableRowsColumnsBodySubscriptFilter>;
  Superscript?: InputMaybe<PageBlocksTableRowsColumnsBodySuperscriptFilter>;
  Anchor?: InputMaybe<PageBlocksTableRowsColumnsBodyAnchorFilter>;
  Image?: InputMaybe<PageBlocksTableRowsColumnsBodyImageFilter>;
};

export type PageBlocksTableRowsColumnsFilter = {
  body?: InputMaybe<PageBlocksTableRowsColumnsBodyFilter>;
};

export type PageBlocksTableRowsFilter = {
  columns?: InputMaybe<PageBlocksTableRowsColumnsFilter>;
  color?: InputMaybe<StringFilter>;
};

export type PageBlocksTableFilter = {
  color?: InputMaybe<StringFilter>;
  full_width?: InputMaybe<BooleanFilter>;
  column_headers?: InputMaybe<PageBlocksTableColumn_HeadersFilter>;
  rows?: InputMaybe<PageBlocksTableRowsFilter>;
};

export type PageBlocksDownloadFilter = {
  color?: InputMaybe<StringFilter>;
  src?: InputMaybe<StringFilter>;
  label?: InputMaybe<StringFilter>;
  icon?: InputMaybe<BooleanFilter>;
};

export type PageBlocksFilter = {
  hero?: InputMaybe<PageBlocksHeroFilter>;
  features?: InputMaybe<PageBlocksFeaturesFilter>;
  content?: InputMaybe<PageBlocksContentFilter>;
  table?: InputMaybe<PageBlocksTableFilter>;
  download?: InputMaybe<PageBlocksDownloadFilter>;
};

export type PageFilter = {
  title?: InputMaybe<StringFilter>;
  blocks?: InputMaybe<PageBlocksFilter>;
};

export type PageConnectionEdges = {
  __typename?: 'PageConnectionEdges';
  cursor: Scalars['String']['output'];
  node?: Maybe<Page>;
};

export type PageConnection = Connection & {
  __typename?: 'PageConnection';
  pageInfo: PageInfo;
  totalCount: Scalars['Float']['output'];
  edges?: Maybe<Array<Maybe<PageConnectionEdges>>>;
};

export type Mutation = {
  __typename?: 'Mutation';
  addPendingDocument: DocumentNode;
  updateDocument: DocumentNode;
  deleteDocument: DocumentNode;
  createDocument: DocumentNode;
  updateGlobal: Global;
  createGlobal: Global;
  updatePage: Page;
  createPage: Page;
};


export type MutationAddPendingDocumentArgs = {
  collection: Scalars['String']['input'];
  relativePath: Scalars['String']['input'];
  template?: InputMaybe<Scalars['String']['input']>;
};


export type MutationUpdateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentUpdateMutation;
};


export type MutationDeleteDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
};


export type MutationCreateDocumentArgs = {
  collection?: InputMaybe<Scalars['String']['input']>;
  relativePath: Scalars['String']['input'];
  params: DocumentMutation;
};


export type MutationUpdateGlobalArgs = {
  relativePath: Scalars['String']['input'];
  params: GlobalMutation;
};


export type MutationCreateGlobalArgs = {
  relativePath: Scalars['String']['input'];
  params: GlobalMutation;
};


export type MutationUpdatePageArgs = {
  relativePath: Scalars['String']['input'];
  params: PageMutation;
};


export type MutationCreatePageArgs = {
  relativePath: Scalars['String']['input'];
  params: PageMutation;
};

export type DocumentUpdateMutation = {
  global?: InputMaybe<GlobalMutation>;
  page?: InputMaybe<PageMutation>;
  relativePath?: InputMaybe<Scalars['String']['input']>;
};

export type DocumentMutation = {
  global?: InputMaybe<GlobalMutation>;
  page?: InputMaybe<PageMutation>;
};

export type GlobalHeaderNavMutation = {
  href?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
};

export type GlobalHeaderMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  nav?: InputMaybe<Array<InputMaybe<GlobalHeaderNavMutation>>>;
};

export type GlobalFooterSectionsMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  content?: InputMaybe<Scalars['JSON']['input']>;
};

export type GlobalFooterMutation = {
  sections?: InputMaybe<Array<InputMaybe<GlobalFooterSectionsMutation>>>;
};

export type GlobalThemeMutation = {
  color?: InputMaybe<Scalars['String']['input']>;
};

export type GlobalMutation = {
  header?: InputMaybe<GlobalHeaderMutation>;
  footer?: InputMaybe<GlobalFooterMutation>;
  theme?: InputMaybe<GlobalThemeMutation>;
};

export type PageBlocksHeroImageMutation = {
  src?: InputMaybe<Scalars['String']['input']>;
  alt?: InputMaybe<Scalars['String']['input']>;
};

export type PageBlocksHeroActionsMutation = {
  label?: InputMaybe<Scalars['String']['input']>;
  icon?: InputMaybe<Scalars['Boolean']['input']>;
  link?: InputMaybe<Scalars['String']['input']>;
};

export type PageBlocksHeroMutation = {
  image?: InputMaybe<PageBlocksHeroImageMutation>;
  headline?: InputMaybe<Scalars['JSON']['input']>;
  actions?: InputMaybe<Array<InputMaybe<PageBlocksHeroActionsMutation>>>;
};

export type PageBlocksFeaturesItemsIconMutation = {
  name?: InputMaybe<Scalars['String']['input']>;
  color?: InputMaybe<Scalars['String']['input']>;
  style?: InputMaybe<Scalars['String']['input']>;
};

export type PageBlocksFeaturesItemsMutation = {
  icon?: InputMaybe<PageBlocksFeaturesItemsIconMutation>;
  title?: InputMaybe<Scalars['String']['input']>;
  text?: InputMaybe<Scalars['JSON']['input']>;
  read_more_button?: InputMaybe<Scalars['Boolean']['input']>;
  read_more_link?: InputMaybe<Scalars['String']['input']>;
  read_more_text?: InputMaybe<Scalars['String']['input']>;
};

export type PageBlocksFeaturesMutation = {
  items?: InputMaybe<Array<InputMaybe<PageBlocksFeaturesItemsMutation>>>;
  color?: InputMaybe<Scalars['String']['input']>;
};

export type PageBlocksContentMutation = {
  color?: InputMaybe<Scalars['String']['input']>;
  body?: InputMaybe<Scalars['JSON']['input']>;
};

export type PageBlocksTableColumn_HeadersMutation = {
  body?: InputMaybe<Scalars['JSON']['input']>;
};

export type PageBlocksTableRowsColumnsMutation = {
  body?: InputMaybe<Scalars['JSON']['input']>;
};

export type PageBlocksTableRowsMutation = {
  columns?: InputMaybe<Array<InputMaybe<PageBlocksTableRowsColumnsMutation>>>;
  color?: InputMaybe<Scalars['String']['input']>;
};

export type PageBlocksTableMutation = {
  color?: InputMaybe<Scalars['String']['input']>;
  full_width?: InputMaybe<Scalars['Boolean']['input']>;
  column_headers?: InputMaybe<Array<InputMaybe<PageBlocksTableColumn_HeadersMutation>>>;
  rows?: InputMaybe<Array<InputMaybe<PageBlocksTableRowsMutation>>>;
};

export type PageBlocksDownloadMutation = {
  color?: InputMaybe<Scalars['String']['input']>;
  src?: InputMaybe<Scalars['String']['input']>;
  label?: InputMaybe<Scalars['String']['input']>;
  icon?: InputMaybe<Scalars['Boolean']['input']>;
};

export type PageBlocksMutation = {
  hero?: InputMaybe<PageBlocksHeroMutation>;
  features?: InputMaybe<PageBlocksFeaturesMutation>;
  content?: InputMaybe<PageBlocksContentMutation>;
  table?: InputMaybe<PageBlocksTableMutation>;
  download?: InputMaybe<PageBlocksDownloadMutation>;
};

export type PageMutation = {
  title?: InputMaybe<Scalars['String']['input']>;
  blocks?: InputMaybe<Array<InputMaybe<PageBlocksMutation>>>;
};

export type LayoutQueryFragmentFragment = { __typename?: 'Query', global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', sections?: Array<{ __typename: 'GlobalFooterSections', title?: string | null, content?: any | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null } | null } };

export type PageQueryQueryVariables = Exact<{ [key: string]: never; }>;


export type PageQueryQuery = { __typename?: 'Query', global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', sections?: Array<{ __typename: 'GlobalFooterSections', title?: string | null, content?: any | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null } | null } };

export type ContentQueryQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type ContentQueryQuery = { __typename?: 'Query', page: { __typename: 'Page', title: string, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: any | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, read_more_button?: boolean | null, read_more_link?: string | null, read_more_text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', color?: string | null, body?: any | null } | { __typename: 'PageBlocksTable', color?: string | null, full_width?: boolean | null, column_headers?: Array<{ __typename: 'PageBlocksTableColumn_headers', body?: any | null } | null> | null, rows?: Array<{ __typename: 'PageBlocksTableRows', color?: string | null, columns?: Array<{ __typename: 'PageBlocksTableRowsColumns', body?: any | null } | null> | null } | null> | null } | { __typename: 'PageBlocksDownload', color?: string | null, src?: string | null, label?: string | null, icon?: boolean | null } | null> | null }, global: { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', sections?: Array<{ __typename: 'GlobalFooterSections', title?: string | null, content?: any | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null } | null } };

export type GlobalPartsFragment = { __typename: 'Global', header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', sections?: Array<{ __typename: 'GlobalFooterSections', title?: string | null, content?: any | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null } | null };

export type PagePartsFragment = { __typename: 'Page', title: string, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: any | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, read_more_button?: boolean | null, read_more_link?: string | null, read_more_text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', color?: string | null, body?: any | null } | { __typename: 'PageBlocksTable', color?: string | null, full_width?: boolean | null, column_headers?: Array<{ __typename: 'PageBlocksTableColumn_headers', body?: any | null } | null> | null, rows?: Array<{ __typename: 'PageBlocksTableRows', color?: string | null, columns?: Array<{ __typename: 'PageBlocksTableRowsColumns', body?: any | null } | null> | null } | null> | null } | { __typename: 'PageBlocksDownload', color?: string | null, src?: string | null, label?: string | null, icon?: boolean | null } | null> | null };

export type GlobalQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type GlobalQuery = { __typename?: 'Query', global: { __typename: 'Global', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', sections?: Array<{ __typename: 'GlobalFooterSections', title?: string | null, content?: any | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null } | null } };

export type GlobalConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<GlobalFilter>;
}>;


export type GlobalConnectionQuery = { __typename?: 'Query', globalConnection: { __typename?: 'GlobalConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'GlobalConnectionEdges', cursor: string, node?: { __typename: 'Global', id: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, header?: { __typename: 'GlobalHeader', name?: string | null, color?: string | null, nav?: Array<{ __typename: 'GlobalHeaderNav', href?: string | null, label?: string | null } | null> | null } | null, footer?: { __typename: 'GlobalFooter', sections?: Array<{ __typename: 'GlobalFooterSections', title?: string | null, content?: any | null } | null> | null } | null, theme?: { __typename: 'GlobalTheme', color?: string | null } | null } | null } | null> | null } };

export type PageQueryVariables = Exact<{
  relativePath: Scalars['String']['input'];
}>;


export type PageQuery = { __typename?: 'Query', page: { __typename: 'Page', id: string, title: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: any | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, read_more_button?: boolean | null, read_more_link?: string | null, read_more_text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', color?: string | null, body?: any | null } | { __typename: 'PageBlocksTable', color?: string | null, full_width?: boolean | null, column_headers?: Array<{ __typename: 'PageBlocksTableColumn_headers', body?: any | null } | null> | null, rows?: Array<{ __typename: 'PageBlocksTableRows', color?: string | null, columns?: Array<{ __typename: 'PageBlocksTableRowsColumns', body?: any | null } | null> | null } | null> | null } | { __typename: 'PageBlocksDownload', color?: string | null, src?: string | null, label?: string | null, icon?: boolean | null } | null> | null } };

export type PageConnectionQueryVariables = Exact<{
  before?: InputMaybe<Scalars['String']['input']>;
  after?: InputMaybe<Scalars['String']['input']>;
  first?: InputMaybe<Scalars['Float']['input']>;
  last?: InputMaybe<Scalars['Float']['input']>;
  sort?: InputMaybe<Scalars['String']['input']>;
  filter?: InputMaybe<PageFilter>;
}>;


export type PageConnectionQuery = { __typename?: 'Query', pageConnection: { __typename?: 'PageConnection', totalCount: number, pageInfo: { __typename?: 'PageInfo', hasPreviousPage: boolean, hasNextPage: boolean, startCursor: string, endCursor: string }, edges?: Array<{ __typename?: 'PageConnectionEdges', cursor: string, node?: { __typename: 'Page', id: string, title: string, _sys: { __typename?: 'SystemInfo', filename: string, basename: string, breadcrumbs: Array<string>, path: string, relativePath: string, extension: string }, blocks?: Array<{ __typename: 'PageBlocksHero', headline?: any | null, image?: { __typename: 'PageBlocksHeroImage', src?: string | null, alt?: string | null } | null, actions?: Array<{ __typename: 'PageBlocksHeroActions', label?: string | null, icon?: boolean | null, link?: string | null } | null> | null } | { __typename: 'PageBlocksFeatures', color?: string | null, items?: Array<{ __typename: 'PageBlocksFeaturesItems', title?: string | null, text?: any | null, read_more_button?: boolean | null, read_more_link?: string | null, read_more_text?: string | null, icon?: { __typename: 'PageBlocksFeaturesItemsIcon', name?: string | null, color?: string | null, style?: string | null } | null } | null> | null } | { __typename: 'PageBlocksContent', color?: string | null, body?: any | null } | { __typename: 'PageBlocksTable', color?: string | null, full_width?: boolean | null, column_headers?: Array<{ __typename: 'PageBlocksTableColumn_headers', body?: any | null } | null> | null, rows?: Array<{ __typename: 'PageBlocksTableRows', color?: string | null, columns?: Array<{ __typename: 'PageBlocksTableRowsColumns', body?: any | null } | null> | null } | null> | null } | { __typename: 'PageBlocksDownload', color?: string | null, src?: string | null, label?: string | null, icon?: boolean | null } | null> | null } | null } | null> | null } };

export const GlobalPartsFragmentDoc = gql`
    fragment GlobalParts on Global {
  __typename
  header {
    __typename
    name
    color
    nav {
      __typename
      href
      label
    }
  }
  footer {
    __typename
    sections {
      __typename
      title
      content
    }
  }
  theme {
    __typename
    color
  }
}
    `;
export const LayoutQueryFragmentFragmentDoc = gql`
    fragment LayoutQueryFragment on Query {
  global(relativePath: "index.json") {
    ...GlobalParts
  }
}
    ${GlobalPartsFragmentDoc}`;
export const PagePartsFragmentDoc = gql`
    fragment PageParts on Page {
  __typename
  title
  blocks {
    __typename
    ... on PageBlocksHero {
      image {
        __typename
        src
        alt
      }
      headline
      actions {
        __typename
        label
        icon
        link
      }
    }
    ... on PageBlocksFeatures {
      items {
        __typename
        icon {
          __typename
          name
          color
          style
        }
        title
        text
        read_more_button
        read_more_link
        read_more_text
      }
      color
    }
    ... on PageBlocksContent {
      color
      body
    }
    ... on PageBlocksTable {
      color
      full_width
      column_headers {
        __typename
        body
      }
      rows {
        __typename
        columns {
          __typename
          body
        }
        color
      }
    }
    ... on PageBlocksDownload {
      color
      src
      label
      icon
    }
  }
}
    `;
export const PageQueryDocument = gql`
    query pageQuery {
  ...LayoutQueryFragment
}
    ${LayoutQueryFragmentFragmentDoc}`;
export const ContentQueryDocument = gql`
    query contentQuery($relativePath: String!) {
  ...LayoutQueryFragment
  page(relativePath: $relativePath) {
    ...PageParts
  }
}
    ${LayoutQueryFragmentFragmentDoc}
${PagePartsFragmentDoc}`;
export const GlobalDocument = gql`
    query global($relativePath: String!) {
  global(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...GlobalParts
  }
}
    ${GlobalPartsFragmentDoc}`;
export const GlobalConnectionDocument = gql`
    query globalConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: GlobalFilter) {
  globalConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...GlobalParts
      }
    }
  }
}
    ${GlobalPartsFragmentDoc}`;
export const PageDocument = gql`
    query page($relativePath: String!) {
  page(relativePath: $relativePath) {
    ... on Document {
      _sys {
        filename
        basename
        breadcrumbs
        path
        relativePath
        extension
      }
      id
    }
    ...PageParts
  }
}
    ${PagePartsFragmentDoc}`;
export const PageConnectionDocument = gql`
    query pageConnection($before: String, $after: String, $first: Float, $last: Float, $sort: String, $filter: PageFilter) {
  pageConnection(
    before: $before
    after: $after
    first: $first
    last: $last
    sort: $sort
    filter: $filter
  ) {
    pageInfo {
      hasPreviousPage
      hasNextPage
      startCursor
      endCursor
    }
    totalCount
    edges {
      cursor
      node {
        ... on Document {
          _sys {
            filename
            basename
            breadcrumbs
            path
            relativePath
            extension
          }
          id
        }
        ...PageParts
      }
    }
  }
}
    ${PagePartsFragmentDoc}`;
export type Requester<C= {}> = <R, V>(doc: DocumentNode, vars?: V, options?: C) => Promise<R>
  export function getSdk<C>(requester: Requester<C>) {
    return {
      pageQuery(variables?: PageQueryQueryVariables, options?: C): Promise<{data: PageQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryQueryVariables, query: string}> {
        return requester<{data: PageQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryQueryVariables, query: string}, PageQueryQueryVariables>(PageQueryDocument, variables, options);
      },
    contentQuery(variables: ContentQueryQueryVariables, options?: C): Promise<{data: ContentQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContentQueryQueryVariables, query: string}> {
        return requester<{data: ContentQueryQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: ContentQueryQueryVariables, query: string}, ContentQueryQueryVariables>(ContentQueryDocument, variables, options);
      },
    global(variables: GlobalQueryVariables, options?: C): Promise<{data: GlobalQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalQueryVariables, query: string}> {
        return requester<{data: GlobalQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalQueryVariables, query: string}, GlobalQueryVariables>(GlobalDocument, variables, options);
      },
    globalConnection(variables?: GlobalConnectionQueryVariables, options?: C): Promise<{data: GlobalConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalConnectionQueryVariables, query: string}> {
        return requester<{data: GlobalConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: GlobalConnectionQueryVariables, query: string}, GlobalConnectionQueryVariables>(GlobalConnectionDocument, variables, options);
      },
    page(variables: PageQueryVariables, options?: C): Promise<{data: PageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryVariables, query: string}> {
        return requester<{data: PageQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageQueryVariables, query: string}, PageQueryVariables>(PageDocument, variables, options);
      },
    pageConnection(variables?: PageConnectionQueryVariables, options?: C): Promise<{data: PageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageConnectionQueryVariables, query: string}> {
        return requester<{data: PageConnectionQuery, errors?: { message: string, locations: { line: number, column: number }[], path: string[] }[], variables: PageConnectionQueryVariables, query: string}, PageConnectionQueryVariables>(PageConnectionDocument, variables, options);
      }
    };
  }
  export type Sdk = ReturnType<typeof getSdk>;

// TinaSDK generated code
import { createClient, TinaClient } from "tinacms/dist/client";

const generateRequester = (
  client: TinaClient,
  options?: { branch?: string }
) => {
  const requester: (
    doc: any,
    vars?: any,
    options?: { branch?: string },
    client
  ) => Promise<any> = async (doc, vars, options) => {
    let url = client.apiUrl
    if (options?.branch) {
      const index = client.apiUrl.lastIndexOf('/')
      url = client.apiUrl.substring(0, index + 1) + options.branch
    }
    const data = await client.request({
      query: doc,
      variables: vars,
      url,
    })

    return { data: data?.data, errors: data?.errors, query: doc, variables: vars || {} }
  }

  return requester
}

/**
 * @experimental this class can be used but may change in the future
 **/
export const ExperimentalGetTinaClient = () =>
  getSdk(
    generateRequester(
      createClient({
        url: "http://localhost:4001/graphql",
        queries,
      })
    )
  )

export const queries = (
  client: TinaClient,
  options?: {
    branch?: string
  }
) => {
  const requester = generateRequester(client, options)
  return getSdk(requester)
}

  